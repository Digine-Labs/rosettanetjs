import { prepareMulticallCalldata } from "../src/multicall";
import { Call } from "../src/types";

describe('encode multicall', () => {
    it('actual 2 calls example', () => {
        const cd = [
            {
                contract_address: '0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7',
                entry_point: '0x0083afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e',
                calldata: ["0x07D33254052409C04510C3652BC5BE5656F1EFF1B131C7C031592E3FA73F1F70", "0x221B262DD8000", "0x0"]
            },
            {
                contract_address: '0x04c5772d1914fe6ce891b64eb35bf3522aeae1315647314aac58b01137607f3f',
                entry_point: '0x00e5b455a836c7a254df57ed39d023d46b641b331162c6c0b369647056655409',
                calldata: ["0x455448", "0x000000000000000000000000E4306A06B19FDC04FDF98CF3C00472F29254C0E1", "0x38D7EA4C68000"]
            }
        ]
        const result = prepareMulticallCalldata(cd)
        expect(result).toBe('0x76971d7f0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000120049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc70083afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000307d33254052409c04510c3652bc5be5656f1eff1b131c7c031592e3fa73f1f70000000000000000000000000000000000000000000000000000221b262dd8000000000000000000000000000000000000000000000000000000000000000000004c5772d1914fe6ce891b64eb35bf3522aeae1315647314aac58b01137607f3f00e5b455a836c7a254df57ed39d023d46b641b331162c6c0b369647056655409000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000455448000000000000000000000000e4306a06b19fdc04fdf98cf3c00472f29254c0e100000000000000000000000000000000000000000000000000038d7ea4c68000');

    });
    it('actual 1 call example', () => {
        const cd = [
            {
                contract_address: '0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7',
                entry_point: '0x0083afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e',
                calldata: ["0x07D33254052409C04510C3652BC5BE5656F1EFF1B131C7C031592E3FA73F1F70", "0x221B262DD8000", "0x0"]
            }
        ]
        const result = prepareMulticallCalldata(cd)
        expect(result).toBe('0x76971d7f000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc70083afd3f4caedc6eebf44246fe54e38c95e3179a5ec9ea81740eca5b482d12e0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000307d33254052409c04510c3652bc5be5656f1eff1b131c7c031592e3fa73f1f70000000000000000000000000000000000000000000000000000221b262dd80000000000000000000000000000000000000000000000000000000000000000000');

    });
    it('no calls example', () => {
        const cd: Call[] = []
        const result = prepareMulticallCalldata(cd)
        expect(result).toBe('0x76971d7f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000');

    });
});
  